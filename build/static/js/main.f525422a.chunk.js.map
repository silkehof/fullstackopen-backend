{"version":3,"sources":["services/PersonsService.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/ConfirmationNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["baseUrl","PersonsService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Filter","props","value","filterValue","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","removePerson","name","number","onClick","ConfirmationNotification","message","className","ErrorNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterValue","confirmationMessage","setConfirmationMessage","errorMessage","setErrorMessage","useEffect","initialPersons","updatePerson","find","p","changedPerson","window","confirm","returnedPerson","map","setTimeout","catch","error","filter","personsToShow","toUpperCase","includes","event","target","preventDefault","personObject","i","length","concat","ReactDOM","render","document","getElementById"],"mappings":"4MACMA,EAAU,eAuBDC,EADQ,CAACC,OApBT,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAKA,EAASC,SAkBdC,OAfjB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaLI,OAVzB,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQGO,OALjC,SAACF,GAEZ,OADgBT,IAAMY,OAAN,UAAgBf,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCP9BS,EAXA,SAACC,GACZ,OACI,qDACsB,uBACdC,MAAOD,EAAME,YACbC,SAAUH,EAAMI,yBCiBjBC,EAtBI,SAACL,GAChB,OACI,uBAAMM,SAAUN,EAAMO,UAAtB,UACI,yCACU,uBACFN,MAAOD,EAAMQ,QACbL,SAAUH,EAAMS,sBAGxB,2CACY,uBACJR,MAAOD,EAAMU,UACbP,SAAUH,EAAMW,wBAGxB,8BACI,wBAAQC,KAAK,SAAb,uBCPDC,EATA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACrB,OACA,gCACKD,EAAOE,KADZ,IACmBF,EAAOG,OACtB,wBAAQC,QAASH,EAAjB,wBCQOI,EAZkB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChC,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,eAAf,SACKD,KCKEE,EAZW,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACzB,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,QAAf,SACKD,KCyIEG,EA1IH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAEThB,EAFS,KAEAmB,EAFA,OAGkBH,mBAAS,IAH3B,mBAGTd,EAHS,KAGEkB,EAHF,OAIsBJ,mBAAS,IAJ/B,mBAITtB,EAJS,KAII2B,EAJJ,OAKsCL,mBAAS,MAL/C,mBAKTM,EALS,KAKYC,EALZ,OAMwBP,mBAAS,MANjC,mBAMTQ,EANS,KAMKC,EANL,KAQhBC,qBAAU,WACRlD,EACGC,SACAG,MAAK,SAAA+C,GACJT,EAAWS,QAEd,IAEH,IAkCMC,EAAe,SAAAzC,GACnB,IAAMmB,EAASW,EAAQY,MAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAOA,KACpC4C,EAAa,2BAAQzB,GAAR,IAAgBG,OAAQP,IAEvC8B,OAAOC,QAAP,4CAAoD3B,EAAOE,KAA3D,yBACFhC,EACGU,OAAOC,EAAI4C,GACXnD,MAAK,SAAAsD,GACJhB,EAAWD,EAAQkB,KAAI,SAAA7B,GAAM,OAAIA,EAAOnB,KAAOA,EAAKmB,EAAS4B,MAC7DX,EAAuB,YAAD,OAAajB,EAAOE,KAApB,wCACtB4B,YAAW,WACTb,EAAuB,QACtB,KACHJ,EAAW,IACXC,EAAa,OAEdiB,OAAM,SAAAC,GACLb,EAAgB,mCAAD,OACsBnB,EAAOE,KAD7B,2CAGf4B,YAAW,WACTX,EAAgB,QACf,KACHP,EAAWD,EAAQsB,QAAO,SAAAT,GAAC,OAAIA,EAAE3C,KAAOA,MACxCgC,EAAW,IACXC,EAAa,QA+BfoB,EAAgC,KAAhB9C,EAClBuB,EACAA,EAAQsB,QAAO,SAAAjC,GAAM,OAAIA,EAAOE,KAAKiC,cAAcC,SAAShD,EAAY+C,kBAE5E,OACE,gCACE,2CACA,cAAC,EAAD,CAA0B7B,QAASU,IACnC,cAAC,EAAD,CAAmBV,QAASY,IAC5B,cAAC,EAAD,CACE9B,YAAaA,EACbE,mBAfqB,SAAC+C,GAC1BtB,EAAesB,EAAMC,OAAOnD,UAe1B,+CACA,cAAC,EAAD,CACEM,UAxGY,SAAC4C,GACjBA,EAAME,iBAMN,IALA,IAAMC,EAAe,CACnBtC,KAAMR,EACNS,OAAQP,GAGD6C,EAAI,EAAGA,EAAI9B,EAAQ+B,OAAQD,IAClC,GAAI9B,EAAQ8B,GAAGvC,KAAKiC,gBAAkBK,EAAatC,KAAKiC,cAEtD,YADAb,EAAaX,EAAQ8B,GAAG5D,IAK5BX,EACGO,OAAO+D,GACPlE,MAAK,SAAAsD,GACJhB,EAAWD,EAAQgC,OAAOf,IAC1BX,EAAuB,YAAD,OAAavB,EAAb,sCACtBoC,YAAW,WACTb,EAAuB,QACtB,KACHJ,EAAW,IACXC,EAAa,OAEdiB,OAAM,SAAAC,GACL,IAAM1B,EAAU0B,EAAMzD,SAASC,KAC/B2C,EAAgB,GAAD,OAAIb,EAAQ0B,QAC3BF,YAAW,WACTX,EAAgB,QACf,SA2EHzB,QAASA,EACTC,iBA9BmB,SAAC0C,GAExBxB,EAAWwB,EAAMC,OAAOnD,QA6BpBS,UAAWA,EACXC,mBA3BqB,SAACwC,GAE1BvB,EAAauB,EAAMC,OAAOnD,UA2BxB,yCACC+C,EAAcL,KAAI,SAAC7B,EAAQyC,GAAT,OACjB,cAAC,EAAD,CAEEzC,OAAQA,EACRC,aAAc,kBAnDD,SAAApB,GACnB,IAAMmB,EAASW,EAAQY,MAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAOA,KAEtC6C,OAAOC,QAAP,iBAAyB3B,EAAOE,KAAhC,OACFhC,EACGa,OAAOF,GACPP,MAAK,SAAAsD,GACJhB,EAAWD,EAAQsB,QAAO,SAAAT,GAAC,OAAIA,EAAE3C,KAAOA,SA4CpBoB,CAAaD,EAAOnB,MAFnC4D,UCpIfG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f525422a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response  => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst PersonsService = {getAll, create, update, remove}\nexport default PersonsService","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            Filter shown with <input\n                value={props.filterValue}\n                onChange={props.handleFilterChange}\n            />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                Name: <input\n                    value={props.newName}\n                    onChange={props.handleNameChange}\n                />\n            </div>\n            <div>\n                Number: <input\n                    value={props.newNumber}\n                    onChange={props.handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({person, removePerson}) => {\n    return (\n    <div>\n        {person.name} {person.number}  \n        <button onClick={removePerson}>Delete</button>\n    </div>\n    )\n}\n\nexport default Person","import React from 'react'\n\nconst ConfirmationNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"confirmation\">\n            {message}\n        </div>\n    )\n}\n\nexport default ConfirmationNotification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorNotification","import React, { useEffect, useState } from 'react'\nimport PersonsService from './services/PersonsService'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport ConfirmationNotification from './components/ConfirmationNotification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n  const [confirmationMessage, setConfirmationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    PersonsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    for (let i = 0; i < persons.length; i++) {\n      if (persons[i].name.toUpperCase() === personObject.name.toUpperCase()) {\n        updatePerson(persons[i].id)\n        return\n      }\n    }\n    \n    PersonsService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setConfirmationMessage(`Success! ${newName} has been added to the phonebook.`)\n        setTimeout(() => {\n          setConfirmationMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        const message = error.response.data\n        setErrorMessage(`${message.error}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const updatePerson = id => { //old entry's id!\n    const person = persons.find(p => p.id === id)\n    const changedPerson = { ...person, number: newNumber }\n\n    if (window.confirm(`Do you want to update the contact ${person.name} with a new number?`)) {\n      PersonsService\n        .update(id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n          setConfirmationMessage(`Success! ${person.name} has been updated in the phonebook.`)\n          setTimeout(() => {\n            setConfirmationMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Oh no! The phonebook entry for '${person.name}' was already removed from the server.`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const removePerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${person.name}?`)) {\n      PersonsService\n        .remove(id)\n        .then(returnedPerson =>  {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilterChange = (event) => {\n    setFilterValue(event.target.value)\n  }\n\n  const personsToShow = filterValue === ''\n    ? persons\n    : persons.filter(person => person.name.toUpperCase().includes(filterValue.toUpperCase()))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ConfirmationNotification message={confirmationMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter \n        filterValue={filterValue}\n        handleFilterChange={handleFilterChange} />\n      <h2>Add new entry</h2>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      {personsToShow.map((person, i) =>\n        <Person \n          key={i}\n          person={person}\n          removePerson={() => removePerson(person.id)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}